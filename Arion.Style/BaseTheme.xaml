<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Icons/SRE450.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush Color="#335D8E" x:Key="SolidDarkBlue" />
    <Color
        A="255"
        B="0x8E"
        G="0x5D"
        R="0x33"
        x:Key="ColorDarkBlue" />
    <SolidColorBrush Color="Gray" x:Key="SolidDisabled" />
    <SolidColorBrush Color="#E5E9EF" x:Key="SolidControl" />
    <SolidColorBrush Color="#ECF0F4" x:Key="SolidControlBorder" />
    <SolidColorBrush Color="#FFFFFF" x:Key="SolidWhite" />
    <SolidColorBrush Color="Red" x:Key="{x:Static ListView.FocusVisualStyleProperty}" />
    <SolidColorBrush Color="Red" x:Key="{x:Static ListView.SelectedItemProperty}" />
    <SolidColorBrush Color="Red" x:Key="{x:Static SystemColors.HighlightBrushKey}" />

    <!--  BUTTON  -->
    <Style TargetType="Button">
        <Setter Property="Background" Value="{StaticResource SolidControl}" />
        <Setter Property="BorderBrush" Value="{StaticResource SolidControlBorder}" />
        <Setter Property="Foreground" Value="{StaticResource SolidDarkBlue}" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="3"
                        Padding="{TemplateBinding Padding}"
                        x:Name="Border">
                        <ContentPresenter
                            Content="{TemplateBinding Content}"
                            HorizontalAlignment="Center"
                            TextElement.Foreground="{TemplateBinding Foreground}"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource SolidDarkBlue}" />
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                            <Setter Property="Foreground" Value="{StaticResource SolidWhite}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource SolidDisabled}" />
                            <Setter Property="Cursor" Value="No" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="BtnText">
        <Setter Property="Background" Value="{StaticResource SolidControl}" />
        <Setter Property="BorderBrush" Value="{StaticResource SolidControlBorder}" />
        <Setter Property="Foreground" Value="{StaticResource SolidDarkBlue}" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="3"
                        Padding="{TemplateBinding Padding}"
                        x:Name="Border">
                        <TextBlock
                            Foreground="{TemplateBinding Foreground}"
                            HorizontalAlignment="Center"
                            Text="{TemplateBinding Content}"
                            TextAlignment="Center"
                            TextWrapping="Wrap"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource SolidDarkBlue}" />
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                            <Setter Property="Foreground" Value="{StaticResource SolidWhite}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource SolidDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TOGGLE BUTTON  -->
    <Style TargetType="ToggleButton">
        <Setter Property="Background" Value="{StaticResource SolidControl}" />
        <Setter Property="BorderBrush" Value="{StaticResource SolidControlBorder}" />
        <Setter Property="Foreground" Value="{StaticResource SolidDarkBlue}" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3"
                        Padding="{TemplateBinding Padding}"
                        x:Name="Border">
                        <ContentPresenter
                            Content="{TemplateBinding Content}"
                            HorizontalAlignment="Center"
                            TextElement.Foreground="{TemplateBinding Foreground}"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                            <Setter Property="BorderThickness" Value="2" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource SolidDarkBlue}" />
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                            <Setter Property="Foreground" Value="{StaticResource SolidWhite}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource SolidDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ToggleButton" x:Key="OnOff">
        <Setter Property="Background" Value="{StaticResource SolidControl}" />
        <Setter Property="BorderBrush" Value="{StaticResource SolidControlBorder}" />
        <Setter Property="Foreground" Value="{StaticResource SolidDarkBlue}" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3"
                        Padding="{TemplateBinding Padding}"
                        x:Name="Border">
                        <Label
                            Content="Выключен"
                            Foreground="{TemplateBinding Foreground}"
                            HorizontalAlignment="Center"
                            Padding="0"
                            VerticalAlignment="Center"
                            x:Name="Text" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="Content" TargetName="Text" Value="Включен" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource SolidDarkBlue}" />
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                            <Setter Property="Foreground" Value="{StaticResource SolidWhite}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource SolidDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ToggleButton" x:Key="TglText">
        <Setter Property="Background" Value="{StaticResource SolidControl}" />
        <Setter Property="BorderBrush" Value="{StaticResource SolidControlBorder}" />
        <Setter Property="Foreground" Value="{StaticResource SolidDarkBlue}" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="3"
                        Padding="{TemplateBinding Padding}"
                        x:Name="Border">
                        <TextBlock
                            Foreground="{TemplateBinding Foreground}"
                            HorizontalAlignment="Center"
                            Text="{TemplateBinding Content}"
                            TextAlignment="Center"
                            TextWrapping="Wrap"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource SolidDarkBlue}" />
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                            <Setter Property="Foreground" Value="{StaticResource SolidWhite}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource SolidDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ToggleButton" x:Key="TgCheck">
        <Setter Property="Background" Value="{StaticResource SolidControl}" />
        <Setter Property="BorderBrush" Value="{StaticResource SolidControlBorder}" />
        <Setter Property="Foreground" Value="{StaticResource SolidDarkBlue}" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3"
                        x:Name="Border">
                        <Grid>
                            <Ellipse
                                Fill="Red"
                                Height="7"
                                HorizontalAlignment="Left"
                                Margin="2"
                                VerticalAlignment="Top"
                                Width="7"
                                x:Name="Ellipse" />
                            <ContentPresenter
                                Content="{TemplateBinding Content}"
                                HorizontalAlignment="Center"
                                Margin="{TemplateBinding Padding}"
                                TextElement.Foreground="{TemplateBinding Foreground}"
                                VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="Fill" TargetName="Ellipse" Value="Green" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource SolidDarkBlue}" />
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                            <Setter Property="Foreground" Value="{StaticResource SolidWhite}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource SolidDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ToggleButton" x:Key="TgOnOff">
        <Setter Property="Background" Value="{StaticResource SolidControl}" />
        <Setter Property="BorderBrush" Value="{StaticResource SolidControlBorder}" />
        <Setter Property="Foreground" Value="{StaticResource SolidDarkBlue}" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        Background="DarkRed"
                        BorderBrush="{StaticResource SolidControlBorder}"
                        BorderThickness="1"
                        CornerRadius="3"
                        Height="45"
                        Padding="{TemplateBinding Padding}"
                        Width="90"
                        x:Name="Border">
                        <Border
                            Background="White"
                            CornerRadius="3"
                            Height="35"
                            HorizontalAlignment="Left"
                            Margin="0"
                            Padding="0"
                            VerticalAlignment="Center"
                            Width="35"
                            x:Name="TgButton">
                            <Label
                                Content="ВЫКЛ"
                                FontSize="11"
                                Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="Center"
                                Padding="0"
                                VerticalAlignment="Center"
                                x:Name="Text" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                            <Setter Property="Background" TargetName="Border" Value="Green" />
                            <Setter Property="BorderThickness" Value="2" />
                            <Setter Property="Content" TargetName="Text" Value="ВКЛ" />
                            <Setter Property="HorizontalAlignment" TargetName="TgButton" Value="Right" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource SolidDarkBlue}" />
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                            <Setter Property="Foreground" Value="{StaticResource SolidWhite}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource SolidDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  WINDOW  -->
    <Style TargetType="Window" x:Key="WindowBase">
        <Setter Property="Background" Value="#ffd7e3f3" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter Content="{TemplateBinding Content}" x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        BasedOn="{StaticResource WindowBase}"
        TargetType="Window"
        x:Key="WindowBorder">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{TemplateBinding Content}" x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  LABEL  -->
    <Style TargetType="Label" x:Key="WindowTitle">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="#E7EAED" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="#8B8D8F" />
        <Setter Property="Focusable" Value="False" />
        <!--<Setter Property="FontFamily" Value="{StaticResource NotoSans-Regular}" />-->
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FontStyle" Value="Normal" />
    </Style>
    <Style TargetType="Label" x:Key="Title">
        <Setter Property="Foreground" Value="#7D87A1" />
        <!--  #D2DEEF  -->
        <Setter Property="FontSize" Value="16" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{StaticResource SolidControl}" />
        <Setter Property="BorderBrush" Value="{StaticResource SolidControl}" />
        <Setter Property="FontFamily" Value="Montserrat" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Height" Value="35" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            RecognizesAccessKey="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Label" x:Key="RoundedLabelStyle">
        <Setter Property="Foreground" Value="{StaticResource SolidDarkBlue}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border
                        BorderBrush="#CCD9EB"
                        BorderThickness="1"
                        CornerRadius="5"
                        Name="Border">
                        <ContentPresenter
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  REPEAT BUTTON  -->
    <Style TargetType="RepeatButton">
        <Setter Property="Background" Value="{StaticResource SolidControl}" />
        <Setter Property="BorderBrush" Value="{StaticResource SolidControlBorder}" />
        <Setter Property="Foreground" Value="{StaticResource SolidDarkBlue}" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="3"
                        Padding="{TemplateBinding Padding}"
                        x:Name="Border">
                        <ContentPresenter
                            Content="{TemplateBinding Content}"
                            HorizontalAlignment="Center"
                            TextElement.Foreground="{TemplateBinding Foreground}"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource SolidDarkBlue}" />
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                            <Setter Property="Foreground" Value="{StaticResource SolidWhite}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource SolidDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TAB CONTROL  -->
    <Style TargetType="TabControl">
        <Setter Property="Background" Value="#D7E3F3" />
    </Style>


    <!--  RADIO BUTTON  -->
    <Style TargetType="RadioButton">
        <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
        <Setter Property="Background" Value="{StaticResource SolidControl}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <Grid Height="16" Width="16">
                                <Ellipse StrokeThickness="1" x:Name="Border">
                                    <Ellipse.Stroke>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="{StaticResource ColorDarkBlue}" Offset="0" />
                                            <GradientStop Color="{StaticResource ColorDarkBlue}" Offset="1" />
                                        </LinearGradientBrush>
                                    </Ellipse.Stroke>
                                    <Ellipse.Fill>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="White" />
                                                    <GradientStop Color="White" Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse
                                    Margin="4"
                                    Visibility="Hidden"
                                    x:Name="CheckMark">
                                    <Ellipse.Fill>
                                        <SolidColorBrush Color="{StaticResource ColorDarkBlue}" />
                                    </Ellipse.Fill>
                                </Ellipse>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter
                            HorizontalAlignment="Left"
                            Margin="4,0,0,0"
                            RecognizesAccessKey="True"
                            VerticalAlignment="Center" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="CheckMark" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TEXT BOX  -->
    <Style TargetType="TextBox">
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border
                        Background="#FFFFFF"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3"
                        Padding="5,0">
                        <ScrollViewer
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="0"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            x:Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                            <Setter Property="BorderThickness" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  PROGRESS BAR  -->
    <Style TargetType="ProgressBar">
        <Setter Property="Foreground" Value="{StaticResource SolidDarkBlue}" />
        <Setter Property="Background" Value="#00000000" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <!--  COMBOBOX  -->
    <!--<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="40" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="Border"
                Grid.ColumnSpan="2"
                Background="#D2DEEF"
                BorderBrush="#CCD9EB"
                BorderThickness="1"
                CornerRadius="3" />
            <Border
                x:Name="RightBorder"
                Grid.Column="0"
                Margin="1"
                Background="#D2DEEF"
                BorderBrush="#CCD9EB"
                BorderThickness="0,0,1,0"
                CornerRadius="3,0,0,3" />
            <Path
                x:Name="Arrow"
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                Fill="{StaticResource SolidDarkBlue}" />
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
                <Setter TargetName="RightBorder" Property="BorderBrush" Value="{StaticResource SolidDarkBlue}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource SolidDarkBlue}" />
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource SolidForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888" />
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border
            x:Name="PART_ContentHost"
            Background="{TemplateBinding Background}"
            Focusable="False" />
    </ControlTemplate>
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Foreground" Value="{StaticResource SolidDarkBlue}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton
                            Name="ToggleButton"
                            ClickMode="Press"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Template="{StaticResource ComboBoxToggleButton}" />
                        <ContentPresenter
                            Name="ContentSite"
                            Margin="10,0,23,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />
                        <TextBox
                            x:Name="PART_EditableTextBox"
                            MinWidth="100"
                            Margin="3,0,23,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Background="{StaticResource SolidDarkBlue}"
                            Focusable="True"
                            Foreground="Green"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Style="{x:Null}"
                            Template="{StaticResource ComboBoxTextBox}"
                            Visibility="Hidden" />
                        <Popup
                            Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">

                            <Grid
                                Name="DropDown"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="#D2DEEF"
                                    BorderBrush="{StaticResource SolidDarkBlue}"
                                    BorderThickness="1"
                                    CornerRadius="3" />
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#f00" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Foreground" Value="#335D8E" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border
                        Name="Border"
                        Padding="2"
                        BorderBrush="#CCD9EB"
                        SnapsToDevicePixels="true">
                        <ContentPresenter Margin="10,5" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#507CAF" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="3" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#fff" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Foreground" Value="#FFF" />
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <Style TargetType="CheckBox" x:Key="CbSorting">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <Border
                            Background="{StaticResource SolidControl}"
                            BorderBrush="{StaticResource SolidDarkBlue}"
                            BorderThickness="1"
                            CornerRadius="5"
                            Height="40"
                            Width="40">
                            <Image Source="{x:Null}" x:Name="Img">
                                <Image.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform X="38" />
                                    </TransformGroup>
                                </Image.RenderTransform>
                            </Image>
                        </Border>
                        <ContentPresenter
                            HorizontalAlignment="Left"
                            Margin="5,0,0,0"
                            RecognizesAccessKey="True"
                            VerticalAlignment="Center" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Source" TargetName="Img" Value="{StaticResource Kind_LeftDrawingImage}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Source" TargetName="Img" Value="{StaticResource Kind_RightDrawingImage}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Source" TargetName="Img" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
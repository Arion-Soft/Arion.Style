<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:controls="clr-namespace:Arion.Style.Controls"
    xmlns:converters="clr-namespace:Arion.Style.Converters"
    xmlns:wpf="clr-namespace:Arion.Style.AttachedProperties"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{StaticResource CleanW}" />
        <Setter Property="BorderBrush" Value="{StaticResource Lg3}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="6"
                        x:Name="Border">
                        <StackPanel
                            IsItemsHost="True"
                            KeyboardNavigation.DirectionalNavigation="Cycle"
                            Orientation="Horizontal" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="{StaticResource CleanW}" />
        <Setter Property="BorderBrush" Value="{StaticResource Lg3}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="6"
                        x:Name="Border">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter Property="Padding" TargetName="Border" Value="0,3,0,3" />
                            <Setter Property="CornerRadius" TargetName="Border" Value="6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ScrollViewer for a MenuItem  -->
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

    <Style
        BasedOn="{x:Null}"
        TargetType="{x:Type ScrollViewer}"
        x:Key="MenuScrollViewer">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Column="0" Grid.Row="1">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                        <RepeatButton
                            Command="{x:Static ScrollBar.LineUpCommand}"
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Focusable="False"
                            Grid.Column="0"
                            Grid.Row="0">
                            <!--  Style="{StaticResource MenuScrollButton}"  -->
                            <RepeatButton.Visibility>
                                <MultiBinding
                                    Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                    ConverterParameter="0"
                                    FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                            <!--  Data="{StaticResource UpArrow}"  -->
                        </RepeatButton>
                        <RepeatButton
                            Command="{x:Static ScrollBar.LineDownCommand}"
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Focusable="False"
                            Grid.Column="0"
                            Grid.Row="2">
                            <!--  Style="{StaticResource MenuScrollButton}"  -->
                            <RepeatButton.Visibility>
                                <MultiBinding
                                    Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                    ConverterParameter="100"
                                    FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                            <!--  Data="{StaticResource DownArrow}"  -->
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Separator}" x:Key="{x:Static MenuItem.SeparatorStyleKey}">
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="0,4,0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="Aqua" BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TopLevelHeader  -->
    <ControlTemplate TargetType="{x:Type MenuItem}" x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter
                    ContentSource="Header"
                    Margin="16,8"
                    RecognizesAccessKey="True" />
                <Popup
                    AllowsTransparency="True"
                    Focusable="False"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    Placement="Bottom"
                    PopupAnimation="Fade"
                    VerticalOffset="5"
                    x:Name="Popup">
                    <Border
                        Background="{StaticResource CleanW}"
                        BorderBrush="{StaticResource Lg3}"
                        BorderThickness="1"
                        CornerRadius="6"
                        SnapsToDevicePixels="True"
                        x:Name="SubmenuBorder">
                        <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="Popup" Value="None" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource Lg5}" />
                <Setter Property="Background" TargetName="Border" Value="{StaticResource Lg5}" />
            </Trigger>
            <Trigger Property="AllowsTransparency" SourceName="Popup" Value="True">
                <Setter Property="CornerRadius" TargetName="SubmenuBorder" Value="6" />
                <Setter Property="Padding" TargetName="SubmenuBorder" Value="0,0,0,3" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Lg3}" />
                <Setter Property="BorderBrush" Value="{StaticResource Lg3}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  TopLevelItem  -->
    <ControlTemplate TargetType="{x:Type MenuItem}" x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter
                    ContentSource="Header"
                    Margin="16,8"
                    RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource Lg5}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Lg3}" />
                <Setter Property="BorderBrush" Value="{StaticResource Lg3}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value=".5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  SubmenuItem  -->
    <ControlTemplate TargetType="{x:Type MenuItem}" x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}">
        <Border
            BorderThickness="1"
            CornerRadius="6"
            Height="32"
            MinWidth="100"
            x:Name="Border">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="Icon" Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition SharedSizeGroup="Shortcut" Width="Auto" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    ContentSource="Icon"
                    Margin="6,0,6,0"
                    VerticalAlignment="Center"
                    x:Name="Icon" />
                <CheckBox
                    Grid.Column="0"
                    Height="20"
                    Margin="0,0,5,0"
                    Visibility="Collapsed"
                    Width="20"
                    wpf:CheckBox.MarkHeight="8"
                    wpf:CheckBox.MarkWidth="10"
                    x:Name="Check" />
                <ContentPresenter
                    ContentSource="Header"
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    RecognizesAccessKey="True"
                    VerticalAlignment="Center"
                    x:Name="HeaderHost" />
                <TextBlock
                    DockPanel.Dock="Right"
                    Grid.Column="2"
                    Margin="5,2,0,2"
                    Text="{TemplateBinding InputGestureText}"
                    x:Name="InputGestureText" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.Command" Value="{x:Null}" />
            <!--  НЕТ ИКОНКИ  -->
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Hidden" />
            </Trigger>

            <!--  ЧЕК  -->
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="IsChecked" TargetName="Check" Value="True" />
            </Trigger>

            <!--  ВОЗМОЖНОСТЬ УСТАНАВЛИВАТЬ ЧЕК  -->
            <Trigger Property="IsCheckable" Value="true">
                <Setter Property="Visibility" TargetName="Check" Value="Visible" />
                <Setter Property="Visibility" TargetName="Icon" Value="Hidden" />
            </Trigger>

            <!--  ПРИ НАВЕДЕНИИ (ЕСЛИ ЭЛЕМЕНТ БЕЗ ПОДМЕНЮ)  -->
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource Lg5}" />
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource Lg5}" />
            </Trigger>

            <!--  ВЫКЛЮЧЕН  -->
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource Dg2}" />
                <Setter Property="Opacity" Value=".5" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Lg3}" />
                <Setter Property="BorderBrush" Value="{StaticResource Lg3}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type MenuItem}" x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}">
        <Border
            BorderThickness="1"
            CornerRadius="6"
            Height="32"
            MinWidth="100"
            x:Name="Border">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="Icon" Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition SharedSizeGroup="Shortcut" Width="Auto" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    ContentSource="Icon"
                    Margin="6,0,6,0"
                    VerticalAlignment="Center"
                    x:Name="Icon" />
                <ContentPresenter
                    ContentSource="Header"
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    RecognizesAccessKey="True"
                    VerticalAlignment="Center"
                    x:Name="HeaderHost" />
                <TextBlock
                    DockPanel.Dock="Right"
                    Grid.Column="2"
                    Margin="5,2,2,2"
                    Text="{TemplateBinding InputGestureText}"
                    x:Name="InputGestureText" />
                <Path
                    Data="M 0 0 L 0 7 L 4 3.5 Z"
                    Fill="{StaticResource Dg2}"
                    Grid.Column="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center" />
                <Popup
                    AllowsTransparency="True"
                    Focusable="False"
                    Grid.Column="0"
                    HorizontalOffset="4"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    Placement="Right"
                    PopupAnimation="Fade"
                    x:Name="Popup">
                    <Border
                        Background="{StaticResource CleanW}"
                        BorderBrush="{StaticResource Lg3}"
                        BorderThickness="1"
                        SnapsToDevicePixels="True"
                        x:Name="SubmenuBorder">
                        <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource Lg5}" />
                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource Lg5}" />
            </Trigger>
            <Trigger Property="AllowsTransparency" SourceName="Popup" Value="True">
                <Setter Property="CornerRadius" TargetName="SubmenuBorder" Value="4" />
                <Setter Property="Padding" TargetName="SubmenuBorder" Value="0,3,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value=".5" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Lg3}" />
                <Setter Property="BorderBrush" Value="{StaticResource Lg3}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  MenuItem Style  -->
    <Style TargetType="{x:Type MenuItem}" x:Key="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
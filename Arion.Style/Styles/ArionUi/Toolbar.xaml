<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="FontFamily.xaml" />
        <ResourceDictionary Source="Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ToolBarButtonBaseStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border
                            Name="Effect"
                            Background="Black"
                            Opacity="0" />
                        <Border
                            x:Name="Border"
                            Padding="{TemplateBinding Padding}"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0">
                            <ContentPresenter
                                Margin="2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True" />
                            <!-- <VisualStateManager.VisualStateGroups> -->
                            <!--     <VisualStateGroup x:Name="CommonStates"> -->
                            <!--         <VisualState x:Name="Normal" /> -->
                            <!--         <VisualState x:Name="Pressed"> -->
                            <!--             <Storyboard> -->
                            <!--                 <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"> -->
                            <!--                     <EasingColorKeyFrame KeyTime="0" Value="RoyalBlue" /> -->
                            <!--                 </ColorAnimationUsingKeyFrames> -->
                            <!--             </Storyboard> -->
                            <!--         </VisualState> -->
                            <!--         <VisualState x:Name="MouseOver"> -->
                            <!--             <Storyboard> -->
                            <!--                 <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"> -->
                            <!--                     <EasingColorKeyFrame KeyTime="0" Value="MediumVioletRed" /> -->
                            <!--                 </ColorAnimationUsingKeyFrames> -->
                            <!--             </Storyboard> -->
                            <!--         </VisualState> -->
                            <!--         <VisualState x:Name="Disabled"> -->
                            <!--             <Storyboard> -->
                            <!--                 <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"> -->
                            <!--                     <EasingColorKeyFrame KeyTime="0" Value="Tan" /> -->
                            <!--                 </ColorAnimationUsingKeyFrames> -->
                            <!--             </Storyboard> -->
                            <!--         </VisualState> -->
                            <!--     </VisualStateGroup> -->
                            <!--     <VisualStateGroup x:Name="CheckStates"> -->
                            <!--         <VisualState x:Name="Checked"> -->
                            <!--             <Storyboard> -->
                            <!--                 <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"> -->
                            <!--                     <EasingColorKeyFrame KeyTime="0" Value="Teal" /> -->
                            <!--                 </ColorAnimationUsingKeyFrames> -->
                            <!--             </Storyboard> -->
                            <!--         </VisualState> -->
                            <!--         <VisualState x:Name="Unchecked" /> -->
                            <!--         <VisualState x:Name="Indeterminate" /> -->
                            <!--     </VisualStateGroup> -->
                            <!-- </VisualStateManager.VisualStateGroups> -->
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  PRESSED  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Effect" Property="Opacity" Value=".1" />
                        </MultiTrigger>
                        <!--  HOVER  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Effect" Property="Opacity" Value=".05" />
                        </MultiTrigger>
                        <!--  DEFAULT  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Effect" Property="Opacity" Value="0" />
                        </MultiTrigger>
                        <!--  DISABLED  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsEnabled" Value="False" />
                            </MultiTrigger.Conditions>

                            <Setter Property="Opacity" Value=".5" />
                        </MultiTrigger>
                        <!--  CHECKED  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Effect" Property="Opacity" Value=".2" />
                        </MultiTrigger>
                        <!--  HOVER CHECKED  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Effect" Property="Opacity" Value=".35" />
                        </MultiTrigger>
                        <!--  PRESSED CHECKED  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Effect" Property="Opacity" Value=".5" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="{x:Static ToolBar.ButtonStyleKey}"
        BasedOn="{StaticResource ToolBarButtonBaseStyle}"
        TargetType="{x:Type Button}" />
    <Style
        x:Key="{x:Static ToolBar.ToggleButtonStyleKey}"
        BasedOn="{StaticResource ToolBarButtonBaseStyle}"
        TargetType="{x:Type ToggleButton}" />
    <Style
        x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
        BasedOn="{StaticResource ToolBarButtonBaseStyle}"
        TargetType="{x:Type CheckBox}" />
    <Style
        x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
        BasedOn="{StaticResource ToolBarButtonBaseStyle}"
        TargetType="{x:Type RadioButton}" />

    <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        x:Name="Border"
                        Padding="2"
                        BorderThickness="1">
                        <Border.Background>
                            <SolidColorBrush Color="{StaticResource ColorLg3}" />
                        </Border.Background>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{StaticResource ColorLg3}" />
                        </Border.BorderBrush>
                        <ScrollViewer x:Name="PART_ContentHost" Margin="0" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ColorLg1}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ColorLg1}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly" />
                                <VisualState x:Name="MouseOver" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Cursor" Value="SizeAll" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="Transparent" SnapsToDevicePixels="True">
                        <Rectangle Margin="0,2">
                            <Rectangle.Fill>
                                <DrawingBrush
                                    TileMode="Tile"
                                    Viewbox="0,0,8,8"
                                    ViewboxUnits="Absolute"
                                    Viewport="0,0,4,4"
                                    ViewportUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <!--  RECTANGLE  -->
                                            <GeometryDrawing Brush="Yellow" Geometry="M 4 4 L 4 8 L 8 8 L 8 4 z" />
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        x:Name="Border"
                        CornerRadius="0,3,3,0"
                        SnapsToDevicePixels="true">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="#00000000" />
                                <GradientStop Offset="1" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <Grid>
                            <!--  TRIANGLE  -->
                            <Path
                                x:Name="Arrow"
                                Margin="2,3"
                                VerticalAlignment="Bottom"
                                Data="M -0.5 3 L 5.5 3 L 2.5 6 Z"
                                Fill="Black" />
                            <ContentPresenter />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ColorLg2}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ColorLg2}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ColorLg1}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ToolBar}" TargetType="{x:Type ToolBar}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Border
                        x:Name="Border"
                        Background="{StaticResource CleanW}"
                        BorderBrush="{StaticResource Lg5}"
                        BorderThickness="1"
                        CornerRadius="2">
                        <DockPanel>
                            <ToggleButton
                                ClickMode="Press"
                                DockPanel.Dock="Right"
                                IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                IsEnabled="{TemplateBinding HasOverflowItems}"
                                Style="{StaticResource ToolBarOverflowButtonStyle}">
                                <Popup
                                    x:Name="OverflowPopup"
                                    AllowsTransparency="true"
                                    Focusable="false"
                                    IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                    Placement="Bottom"
                                    PopupAnimation="Slide"
                                    StaysOpen="false">
                                    <Border x:Name="DropDownBorder" BorderThickness="1">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="Pink" />
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                <GradientStop Color="Blue" />
                                                <GradientStop Offset="1" Color="Plum" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <ToolBarOverflowPanel
                                            x:Name="PART_ToolBarOverflowPanel"
                                            Margin="2"
                                            FocusVisualStyle="{x:Null}"
                                            Focusable="true"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            WrapWidth="200" />
                                    </Border>
                                </Popup>
                            </ToggleButton>

                            <Thumb
                                x:Name="ToolBarThumb"
                                Width="10"
                                Style="{StaticResource ToolBarThumbStyle}" />
                            <ToolBarPanel
                                x:Name="PART_ToolBarPanel"
                                Margin="0,1,2,2"
                                IsItemsHost="true" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen" Value="true">
                            <Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="false" />
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="true">
                            <Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ToolBarTray}" TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Offset="0.0" Color="Green" />
                            <GradientStop Offset="1.0" Color="Fuchsia" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>